{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"themes/fluid/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1639489334000},{"_id":"source/_posts/创建自定义盘符.md","hash":"c66a032cf18174e6598c0323e100f040a8f41a69","modified":1639560192000},{"_id":"source/_posts/开幕式.md","hash":"18669588ea81dfbcd73ade2f58f575bb51f165f4","modified":1639491576000},{"_id":"source/about/index.md","hash":"5c86db3c1e2d73f41b612f9ccb0db4cf8da60f15","modified":1639558430000},{"_id":"source/system/index-1.md","hash":"4988c7a0434913ccce44bf9e49621a45f7f3ff31","modified":1639559870000},{"_id":"source/system/index-2.md","hash":"d9a5c69de230ef444343fe1537e56b2b5218a60e","modified":1639559906000},{"_id":"source/system/index.md","hash":"fe59529f5baf86a844e586d8ee18b87450ad0d74","modified":1639559582000},{"_id":"source/tags/index.md","hash":"3e170085c0e9f5e40806178aff737a076bcdd071","modified":1639488884000},{"_id":"themes/fluid/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1632303132000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1632303132000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1632303132000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1632303132000},{"_id":"themes/fluid/.gitignore","hash":"bd095eee271360a38772ee1a42d4f000fb722e5f","modified":1632303132000},{"_id":"themes/fluid/LICENSE","hash":"df5b54be535593d5442cebafbea34eb9bd69b987","modified":1632303132000},{"_id":"themes/fluid/README.md","hash":"03cfa8e5f149514b57ef80dcb84eb7fea261370d","modified":1632303132000},{"_id":"themes/fluid/README_en.md","hash":"ca8fd19a4948de1f253616a62c0e8a7d81f692f5","modified":1632303132000},{"_id":"themes/fluid/_config.yml","hash":"210d82fa033d6d95227e9268870df427339612dc","modified":1639492336000},{"_id":"themes/fluid/package.json","hash":"18f04247801549fe78600c1ee9c601fcbea4cab3","modified":1632303132000},{"_id":"themes/fluid/languages/de.yml","hash":"13a6a799415fc2f6f69ebd1a399fb44426a5d641","modified":1632303132000},{"_id":"themes/fluid/languages/en.yml","hash":"a85dcc5cc21f9cab50df31e5001b8818ee62d1e2","modified":1632303132000},{"_id":"themes/fluid/languages/ja.yml","hash":"91020031a847c0361a6fd7ab990c7be4bf17529b","modified":1632303132000},{"_id":"themes/fluid/languages/eo.yml","hash":"a0c7984495d4f2d33b64adfa33adebbf768a5ac3","modified":1632303132000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"21307b4137c3d9b04bb58243747e75af0abc5a71","modified":1632303132000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"1a6d415446da11dee5c5f400e7d67544fbe743ea","modified":1632303132000},{"_id":"themes/fluid/layout/404.ejs","hash":"689d9f4efd2a7f5edfd9b24561a7ade69d46617c","modified":1632303132000},{"_id":"themes/fluid/layout/about.ejs","hash":"ad6fed7b646d3ca961db83db0fbe020e3a5d42ad","modified":1632303132000},{"_id":"themes/fluid/layout/archive.ejs","hash":"472d0813ca5b88000a7bc6039f33b7e27b5a3216","modified":1632303132000},{"_id":"themes/fluid/layout/categories.ejs","hash":"20c2a195a109d2a263b5fa6e79cbcc62932508ad","modified":1632303132000},{"_id":"themes/fluid/layout/category.ejs","hash":"58291dfec65c36889dfce0ddc603540b67e4c598","modified":1632303132000},{"_id":"themes/fluid/layout/index.ejs","hash":"666476260a2cead2cc2928d51977c4a7ba8de6bb","modified":1632303132000},{"_id":"themes/fluid/layout/layout.ejs","hash":"7f566edf750241e62d7c54abfbb0c504fdab850a","modified":1632303132000},{"_id":"themes/fluid/layout/links.ejs","hash":"2a7b49f0f9aecf07550b5a0b99242aab5654cf2b","modified":1632303132000},{"_id":"themes/fluid/layout/page.ejs","hash":"1014b901d396f4fc445cb1ffc938d5380d894d71","modified":1632303132000},{"_id":"themes/fluid/layout/post.ejs","hash":"79e3679a7069351a6172c281b9d09f59d7580484","modified":1632303132000},{"_id":"themes/fluid/layout/tag.ejs","hash":"0ad89eb7c92a822980fa9a85285e6d94ad845d1d","modified":1632303132000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1632303132000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1632303132000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/archive-list.ejs","hash":"53a4f6029373a40394a87aba9284696a71610f90","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/beian.ejs","hash":"58b4bbe36386de4305a8da5ffd7d56802df23049","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/css.ejs","hash":"c363829a4b80f74fc1c565e41f6dab41c95006ea","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/footer.ejs","hash":"a62278c38a310da495d96c39abacacef266945cb","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/head.ejs","hash":"7d0cf31f2595cfe6d5ad31d569654f21a00dfd77","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/nav.ejs","hash":"e71b3c4aa263163597d31b1f91e5a1a877084cfd","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/post-meta.ejs","hash":"32a17edadeed40da6db21d2d8031bd47d2fc9bf4","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/scripts.ejs","hash":"0ee838b6fcd895d21a29d9d67dbb99b752d623d1","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/search.ejs","hash":"cdd7919fa01f6ef7ccc09938d662ff3d77f5d999","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/statistics.ejs","hash":"920bc618d357d48d2b96f8758f6ae8f9488fc4d8","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/toc.ejs","hash":"3d2fb5552f373e5a0c56bc356702d807bcbcb411","modified":1632303132000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1632303132000},{"_id":"themes/fluid/source/css/main.styl","hash":"d5a8a59c8d1fd17d699a951e59c4ce9ae44c419d","modified":1632303132000},{"_id":"themes/fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1632303132000},{"_id":"themes/fluid/source/img/favicon.png","hash":"c64be4732b37ae17a1b96bceb33e4e7397888a4b","modified":1639491922000},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1632303132000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1632303132000},{"_id":"themes/fluid/source/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1632303132000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"2520c6459b544a4e965b838f8095e2a84390a43c","modified":1632303132000},{"_id":"themes/fluid/source/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1632303132000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1632303132000},{"_id":"themes/fluid/source/js/leancloud.js","hash":"4a787cfce27045aa0a92ec22e84f2ccf30cabc4c","modified":1632303132000},{"_id":"themes/fluid/source/js/local-search.js","hash":"633f0142c657805359b0197f287e12ae4bcde731","modified":1632303132000},{"_id":"themes/fluid/source/js/plugins.js","hash":"d058f30bd09b28769c4d8313428ff23dfc8d52dd","modified":1632303132000},{"_id":"themes/fluid/source/js/utils.js","hash":"4a43f2700e91937650bef511fd438825b001c4c6","modified":1632303132000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1632303132000},{"_id":"themes/fluid/scripts/events/index.js","hash":"44faef3e77ab08b91e4c5c6f1cd9087a9faff443","modified":1632303132000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1632303132000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"6c37e9f1ac1d6d00b3c32794e02e244dba942cd9","modified":1632303132000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1632303132000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1632303132000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"cde964c8cd3217268a231de5e018a62c53c2e047","modified":1632303132000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1632303132000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1632303132000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"3aa5b4ea879cd34d3a32468d88da18d72cbcc8e0","modified":1632303132000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"8e33f915028ac56258f6999d19b1ad8d800cecfe","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"63468f7875c09d9557fe8315afc97175745d9087","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1632303132000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1632303132000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1632303132000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"649457796374c79e49a19bd541e4ad8e78fe8995","modified":1632303132000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/twikoo.ejs","hash":"1af53bc0be642610a3a4d4e7c05287854a821508","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/utterances.ejs","hash":"e1ed6530dfd7310f91060a75766a93ac3c39be3a","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/valine.ejs","hash":"4052ab2a8f78efa92f0fe17abe8f66135943390a","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/comments/waline.ejs","hash":"21e00443054802e893aac1f668b69d5bb4b39b3a","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/plugins/analytics.ejs","hash":"557077a8825fffc0a2c7fe2b29f319287950244f","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/plugins/math.ejs","hash":"a7ed1d3079c32497c8955ca75f5fb6992e5ffb8b","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/plugins/mermaid.ejs","hash":"10ed1f9a611449d37736e17c4e251127b38b3772","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1632303132000},{"_id":"themes/fluid/layout/_partial/plugins/typed.ejs","hash":"ece659572cf4e12638a1607fca512c25098bbd82","modified":1632303132000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1632303132000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1632303132000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"63aedd67d90d641cc672540db20ef615f528c9f1","modified":1632303132000},{"_id":"themes/fluid/source/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"b5fd5a2d9c463eb59318af0f47c591c485b6ad27","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"3b2abc5f5e3b681874637e98e047dc4969eb1983","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"28e186c32576eb3d5d923273471a001c47fe8071","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"deed966f38cf0c8dee3f72e5b1f2e878510db0e1","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1632303132000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"c1db1a4f9eca6e36b660530641e3a4fb6a30c8d8","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"6e6f22b664199772370b59ce1678b0c148b5849f","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"cd55a2dce6b9d3e165a0a26d0b5bf7f649006bcd","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"d547ab0b91f84eb0acd0bc0c5d716ce17c30361a","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"32fb938d72b2d86159cb315a98b086bd17fa4415","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/rewrite.styl","hash":"c66e0da2c0d05e76a686a77ab4e74f0d2e89777d","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_category/categories.styl","hash":"1ab7db37c2f7dc7ccdb994dcb41c16a4c8920397","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"616c1f7147078c3d532dd1cfd2af09c0c3a816f0","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"7e32a3268accf3d524209c213e15e2d5d5e2e1a6","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_post/post.styl","hash":"3a6b4f8a29648d9d2c1e99b52a7b42df3f15cf62","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_post/tag_plugin.styl","hash":"b89b96c8a6a433a6f372b42710554b05cab85a24","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"30f8fab95a5214d79df0ccc02b937df8bd885676","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"32d90bcc8bf2fd5d8d78e86a567973d4b69bcfa1","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"0ce7552dc4993926426019398d73e817cfd841a1","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copy-btn.styl","hash":"9f932ca3f9625c13aa5353f58319881e62c0c653","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"d8011325756eb6e4ce619b3e7b4d6d80c2de8a57","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"55e10a6965462f8f62f85e75fd5e143af02a4b44","modified":1632303132000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1632303132000},{"_id":"themes/fluid/source/img/default.png","hash":"3652ec69307fd67b47df94910e7d8511246ad9d2","modified":1639492160000},{"_id":"source/_posts/case-when使用方式.md","hash":"436b28879828c9c6ed758cbf14eaded3b14bac4c","modified":1639566232000},{"_id":"source/_posts/mysql创建只读用户.md","hash":"77a6a75fa3ec58124882ad8d163389e1bcf6e84d","modified":1639566920000},{"_id":"source/_posts/mysql创建新用户并授权.md","hash":"f41ab894a81f7b8eca01169997a6045db9fea183","modified":1639566904000},{"_id":"source/_posts/使用hexo创建博客.md","hash":"244c6289709addbf6c55d507248d47632938f2b4","modified":1639562068000},{"_id":"source/_posts/linux防火墙管理.md","hash":"ce261a35e329c8038edfbc27b69ebc4ede2fccf5","modified":1639567362000},{"_id":"source/_posts/nacos安装集群.md","hash":"9337478165b2f2319bea1ace174133dd48e0eab8","modified":1639567462000},{"_id":"source/_posts/nat模式连接虚拟机.md","hash":"6827324c658833dc6804b7114304ddc30c405b47","modified":1639567506000},{"_id":"source/_posts/修改linux网卡.md","hash":"c0ad3eadadd864490a8e05c71b0dd3b62f84d876","modified":1639567662000}],"Category":[{"name":"linux","_id":"ckx7bp90n0009ospw9zp2e4yq"},{"name":"system","_id":"ckx7bt0rk000hospw8c3u96a0"},{"name":"博客","_id":"ckx7cx86x000rospwa2ixbhuj"},{"name":"mysql","_id":"ckx7fee61000yospwffbhf4am"},{"name":"微服务","_id":"ckx7g4mw400080wpwarm82iwq"},{"name":"nacos","parent":"ckx7g4mw400080wpwarm82iwq","_id":"ckx7g4mw5000b0wpwbu2vads2"},{"name":"虚拟机","_id":"ckx7g5mez000j0wpwc0oudofh"}],"Data":[],"Page":[{"title":"about","date":"2021-12-03T08:17:21.000Z","_content":"\n\n\nGood Good Study,Day Day Up!\n\n##### 联系方式\n\nQQ: 1049092041","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-12-03 16:17:21\n---\n\n\n\nGood Good Study,Day Day Up!\n\n##### 联系方式\n\nQQ: 1049092041","updated":"2021-12-15T08:53:50.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckx7bp90d0000ospw6uc0f0s3","content":"<p>Good Good Study,Day Day Up!</p>\n<h5 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h5><p>QQ: 1049092041</p>\n","site":{"data":{}},"wordcount":40,"excerpt":"","more":"<p>Good Good Study,Day Day Up!</p>\n<h5 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h5><p>QQ: 1049092041</p>\n"},{"title":"tags","date":"2021-12-14T13:34:23.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-12-14 21:34:23\ntype: tags\n---\n","updated":"2021-12-14T13:34:44.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckx7bp90h0004ospwd3bh5efh","content":"","site":{"data":{}},"wordcount":0,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-12-03T07:54:18.220Z","updated":"2021-12-14T13:42:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx7bp90i0005ospwd42fahqg","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"wordcount":367,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new <span class=\"hljs-string\">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo server<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"开幕式","date":"2021-12-14T14:18:59.000Z","urlname":null,"_content":"\n> 梦在前方，路在脚下！\n\n这是属于自己的第一篇文章，这是测试文章。\n","source":"_posts/开幕式.md","raw":"---\ntitle: 开幕式\ncategories:\n  - linux\ntags:\n  - linux\ndate: 2021-12-14 22:18:59\nurlname:\n---\n\n> 梦在前方，路在脚下！\n\n这是属于自己的第一篇文章，这是测试文章。\n","slug":"开幕式","published":1,"updated":"2021-12-14T14:19:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx7bp90l0007ospw7bgjcjfv","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>这是属于自己的第一篇文章，这是测试文章。</p>\n","site":{"data":{}},"wordcount":30,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>这是属于自己的第一篇文章，这是测试文章。</p>\n"},{"title":"创建自定义盘符","date":"2021-12-15T09:21:28.000Z","urlname":"创建自定义盘符","_content":"\n> 梦在前方，路在脚下！\n\n\n\n打开CMD窗口\n\n```\ndiskpart\n\nlist volume\n\nselect volume  <盘符>\n\nassign letter= <盘符>\n\n\n```\n\n","source":"_posts/创建自定义盘符.md","raw":"---\ntitle: 创建自定义盘符\ncategories:\n  - system\ntags:\n  - U盘\ndate: 2021-12-15 17:21:28\nurlname: 创建自定义盘符\n---\n\n> 梦在前方，路在脚下！\n\n\n\n打开CMD窗口\n\n```\ndiskpart\n\nlist volume\n\nselect volume  <盘符>\n\nassign letter= <盘符>\n\n\n```\n\n","slug":"创建自定义盘符","published":1,"updated":"2021-12-15T09:23:12.000Z","_id":"ckx7btti2000lospwbqsgddck","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>打开CMD窗口</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">diskpart<br><br>list <span class=\"hljs-built_in\">volume</span><br><br><span class=\"hljs-built_in\">select</span> <span class=\"hljs-built_in\">volume</span>  &lt;盘符&gt;<br><br>assign letter= &lt;盘符&gt;<br><br><br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":89,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>打开CMD窗口</p>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">diskpart<br><br>list <span class=\"hljs-built_in\">volume</span><br><br><span class=\"hljs-built_in\">select</span> <span class=\"hljs-built_in\">volume</span>  &lt;盘符&gt;<br><br>assign letter= &lt;盘符&gt;<br><br><br></code></pre></td></tr></table></figure>\n\n"},{"title":"使用hexo创建博客","date":"2021-12-15T09:50:23.000Z","urlname":null,"_content":"\n> 梦在前方，路在脚下！\n\n# [使用 Git Hook 自动部署 Hexo 到个人 VPS](https://www.cnblogs.com/navysummer/p/9842065.html)\n\n## 安装 Hexo\n\n既然我的标题都已经那样写了，当然这个小节就不是本篇文章的重点了。\n\n关于 Hexo 的安装跟配置，其实网上已经有很多很多文章了，随便一搜一大把。这里就有一篇超详细的，大家可以[参考一下](http://ibruce.info/2013/11/22/hexo-your-blog/)。\n\n但是，网上的教程大多数都是直接将 Hexo 部署到 Github Pages 上面的，虽说这种方法很方便，也很主流，但是用别人的东西难免会有各种各样的限制。再加上我已经有一个 VPS 了，当然希望直接使用自己的服务器来部署博客了。\n\n要把 Hexo 部署到自己的 VPS 上面，最直观的做法就是，在本机上先 `hexo generate`，然后再将生成的静态 HTML 文件通过 `ftp` 或者其它工具上传到服务器上。这种方法虽说很直观，但是操作起来其实很繁琐，比之前直接操作 wordpress 后台还要麻烦很多，而且也很容易出错，一不小心就心出于丢失文件等问题。当然，最重要的一点还是，这一点也不 geek。用了 hexo 这么酷的系统来写博客，却要那样来手动部署不是显得弱爆了么。\n\n经过我的一番搜索，终于找到一种很方便的方法，那就是使用 git hooks 来实现自动化部署。\n\n## 配置服务器远程 Git\n\n大家都知道 Git 是分布式的版本控制系统，远程仓库跟本地仓库是没有什么不同的。\n\n我的 VPS 系统是 Ubuntu 14.04 的，在 Ubuntu 上配置 Git 是相当简单的。\n\n### 第一步\n\n安装 `git`：\n\n```shell\n$ sudo apt-get install git\n```\n\n### 第二步\n\n创建一个 `git` 用户，用来运行 `git` 服务：\n\n```shell\n$ sudo adduser git\n```\n\n\n\n> 虽说现在的仓库只有我们自己在使用，新建一个 `git` 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 `git` 用户来专门运行 `git` 服务\n\n### 第三步\n\n创建证书登录，把自己电脑的公钥，也就是 `~/.ssh/id_rsa.pub` 文件里的内容添加到服务器的 `/home/git/.ssh/authorized_keys` 文件中，添加公钥之后可以防止每次 push 都输入密码。\n\n> 如果你之前没有生成过公钥，则可能就没有 `id_rsa.pub` 文件，具体的生成方法，可以[参考这里](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)。\n\n### 第四步\n\n初始化 Git 仓库，我是将其放在 `/var/repo/blog.git` 目录下的：\n\n```shell\n$ sudo mkdir /var/repo$ cd /var/repo$ sudo git init --bare blog.git\n```\n\n使用 `--bare` 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。\n\n### 第五步\n\n配置 git hooks，关于 hooks 的详情内容可以[参考这里](https://git-scm.com/book/zh/v2/自定义-Git-Git-钩子)。\n\n我们这里要使用的是 `post-receive` 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行。\n\n在 `blog.git/hooks` 目录下新建一个 `post-receive` 文件：\n\n```shell\n cd /var/repo/blog.git/hooks$ vim post-receive\n```\n\n在 `post-receive` 文件中写入如下内容：\n\n```shell\n#!/bin/sh\ngit --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f\n```\n\n注意，`/var/www/hexo` 要换成你自己的部署目录，一般可能都是 `/var/www/html`。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。\n\n不要忘记设置这个文件的可执行权限：\n\n```shell\nchmod +x post-receive\n```\n\n \n\n### 第六步\n\n改变 `blog.git` 目录的拥有者为 `git` 用户：\n\n```shell\n$ sudo chown -R git:git blog.git\n```\n\n### 第七步\n\n禁用 `git` 用户的 shell 登录权限。\n\n出于安全考虑，我们要让 `git` 用户不能通过 shell 登录。可以编辑 `/etc/passwd` 来实现，在 `/etc/passwd`中找到类似下面的一行：\n\n```shell\ngit:x:1001:1001:,,,:/home/git:/bin/bash\n```\n\n将其改为：\n\n```shell\ngit:x:1001:1001:,,,:/home/git:/usr/bin/git-shell\n```\n\n这样 `git` 用户可以通过 ssh 正常使用 git，但是无法登录 sehll。\n\n至此，服务器端的配置就完成了。\n\n## 本地配置\n\n配置你的 hexo 博客可以自动 deploy 到服务器上，再也不用 ftp 上传了。\n\n修改 hexo 目录下的 `_config.yml` 文件，找到 [deploy] 条目，并修改为：\n\n```shell\ndeploy:type: gitrepo: git@www.swiftyper.com:/var/repo/blog.gitbranch: master\n```\n\n要注意切换成你自己的服务器地址，以及服务器端 git 仓库的目录。\n\n本地配置就是如此地简单。至此，我们的 hexo 自动部署已经全部配置好了。\n\n## 使(zhuang)用(bi)\n\n从此以后，要发新博客的步骤不要太简单：\n\n```shell\n hexo new \"new-post\" # bla..bla..bla.. $ hexo clean && hexo generate --deploy\n```\n\n有没有很酷很方便，一条命令就可以将博客自动部署到自己的 VPS 上了，开始快乐地写博客吧。\n\n ","source":"_posts/使用hexo创建博客.md","raw":"---\ntitle: 使用hexo创建博客\ncategories:\n  - 博客\ntags:\n  - 博客\ndate: 2021-12-15 17:50:23\nurlname:\n---\n\n> 梦在前方，路在脚下！\n\n# [使用 Git Hook 自动部署 Hexo 到个人 VPS](https://www.cnblogs.com/navysummer/p/9842065.html)\n\n## 安装 Hexo\n\n既然我的标题都已经那样写了，当然这个小节就不是本篇文章的重点了。\n\n关于 Hexo 的安装跟配置，其实网上已经有很多很多文章了，随便一搜一大把。这里就有一篇超详细的，大家可以[参考一下](http://ibruce.info/2013/11/22/hexo-your-blog/)。\n\n但是，网上的教程大多数都是直接将 Hexo 部署到 Github Pages 上面的，虽说这种方法很方便，也很主流，但是用别人的东西难免会有各种各样的限制。再加上我已经有一个 VPS 了，当然希望直接使用自己的服务器来部署博客了。\n\n要把 Hexo 部署到自己的 VPS 上面，最直观的做法就是，在本机上先 `hexo generate`，然后再将生成的静态 HTML 文件通过 `ftp` 或者其它工具上传到服务器上。这种方法虽说很直观，但是操作起来其实很繁琐，比之前直接操作 wordpress 后台还要麻烦很多，而且也很容易出错，一不小心就心出于丢失文件等问题。当然，最重要的一点还是，这一点也不 geek。用了 hexo 这么酷的系统来写博客，却要那样来手动部署不是显得弱爆了么。\n\n经过我的一番搜索，终于找到一种很方便的方法，那就是使用 git hooks 来实现自动化部署。\n\n## 配置服务器远程 Git\n\n大家都知道 Git 是分布式的版本控制系统，远程仓库跟本地仓库是没有什么不同的。\n\n我的 VPS 系统是 Ubuntu 14.04 的，在 Ubuntu 上配置 Git 是相当简单的。\n\n### 第一步\n\n安装 `git`：\n\n```shell\n$ sudo apt-get install git\n```\n\n### 第二步\n\n创建一个 `git` 用户，用来运行 `git` 服务：\n\n```shell\n$ sudo adduser git\n```\n\n\n\n> 虽说现在的仓库只有我们自己在使用，新建一个 `git` 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 `git` 用户来专门运行 `git` 服务\n\n### 第三步\n\n创建证书登录，把自己电脑的公钥，也就是 `~/.ssh/id_rsa.pub` 文件里的内容添加到服务器的 `/home/git/.ssh/authorized_keys` 文件中，添加公钥之后可以防止每次 push 都输入密码。\n\n> 如果你之前没有生成过公钥，则可能就没有 `id_rsa.pub` 文件，具体的生成方法，可以[参考这里](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)。\n\n### 第四步\n\n初始化 Git 仓库，我是将其放在 `/var/repo/blog.git` 目录下的：\n\n```shell\n$ sudo mkdir /var/repo$ cd /var/repo$ sudo git init --bare blog.git\n```\n\n使用 `--bare` 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。\n\n### 第五步\n\n配置 git hooks，关于 hooks 的详情内容可以[参考这里](https://git-scm.com/book/zh/v2/自定义-Git-Git-钩子)。\n\n我们这里要使用的是 `post-receive` 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行。\n\n在 `blog.git/hooks` 目录下新建一个 `post-receive` 文件：\n\n```shell\n cd /var/repo/blog.git/hooks$ vim post-receive\n```\n\n在 `post-receive` 文件中写入如下内容：\n\n```shell\n#!/bin/sh\ngit --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f\n```\n\n注意，`/var/www/hexo` 要换成你自己的部署目录，一般可能都是 `/var/www/html`。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。\n\n不要忘记设置这个文件的可执行权限：\n\n```shell\nchmod +x post-receive\n```\n\n \n\n### 第六步\n\n改变 `blog.git` 目录的拥有者为 `git` 用户：\n\n```shell\n$ sudo chown -R git:git blog.git\n```\n\n### 第七步\n\n禁用 `git` 用户的 shell 登录权限。\n\n出于安全考虑，我们要让 `git` 用户不能通过 shell 登录。可以编辑 `/etc/passwd` 来实现，在 `/etc/passwd`中找到类似下面的一行：\n\n```shell\ngit:x:1001:1001:,,,:/home/git:/bin/bash\n```\n\n将其改为：\n\n```shell\ngit:x:1001:1001:,,,:/home/git:/usr/bin/git-shell\n```\n\n这样 `git` 用户可以通过 ssh 正常使用 git，但是无法登录 sehll。\n\n至此，服务器端的配置就完成了。\n\n## 本地配置\n\n配置你的 hexo 博客可以自动 deploy 到服务器上，再也不用 ftp 上传了。\n\n修改 hexo 目录下的 `_config.yml` 文件，找到 [deploy] 条目，并修改为：\n\n```shell\ndeploy:type: gitrepo: git@www.swiftyper.com:/var/repo/blog.gitbranch: master\n```\n\n要注意切换成你自己的服务器地址，以及服务器端 git 仓库的目录。\n\n本地配置就是如此地简单。至此，我们的 hexo 自动部署已经全部配置好了。\n\n## 使(zhuang)用(bi)\n\n从此以后，要发新博客的步骤不要太简单：\n\n```shell\n hexo new \"new-post\" # bla..bla..bla.. $ hexo clean && hexo generate --deploy\n```\n\n有没有很酷很方便，一条命令就可以将博客自动部署到自己的 VPS 上了，开始快乐地写博客吧。\n\n ","slug":"使用hexo创建博客","published":1,"updated":"2021-12-15T09:54:28.000Z","_id":"ckx7crzjr000oospwd2ls0nrc","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"使用-Git-Hook-自动部署-Hexo-到个人-VPS\"><a href=\"#使用-Git-Hook-自动部署-Hexo-到个人-VPS\" class=\"headerlink\" title=\"使用 Git Hook 自动部署 Hexo 到个人 VPS\"></a><a href=\"https://www.cnblogs.com/navysummer/p/9842065.html\">使用 Git Hook 自动部署 Hexo 到个人 VPS</a></h1><h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>既然我的标题都已经那样写了，当然这个小节就不是本篇文章的重点了。</p>\n<p>关于 Hexo 的安装跟配置，其实网上已经有很多很多文章了，随便一搜一大把。这里就有一篇超详细的，大家可以<a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">参考一下</a>。</p>\n<p>但是，网上的教程大多数都是直接将 Hexo 部署到 Github Pages 上面的，虽说这种方法很方便，也很主流，但是用别人的东西难免会有各种各样的限制。再加上我已经有一个 VPS 了，当然希望直接使用自己的服务器来部署博客了。</p>\n<p>要把 Hexo 部署到自己的 VPS 上面，最直观的做法就是，在本机上先 <code>hexo generate</code>，然后再将生成的静态 HTML 文件通过 <code>ftp</code> 或者其它工具上传到服务器上。这种方法虽说很直观，但是操作起来其实很繁琐，比之前直接操作 wordpress 后台还要麻烦很多，而且也很容易出错，一不小心就心出于丢失文件等问题。当然，最重要的一点还是，这一点也不 geek。用了 hexo 这么酷的系统来写博客，却要那样来手动部署不是显得弱爆了么。</p>\n<p>经过我的一番搜索，终于找到一种很方便的方法，那就是使用 git hooks 来实现自动化部署。</p>\n<h2 id=\"配置服务器远程-Git\"><a href=\"#配置服务器远程-Git\" class=\"headerlink\" title=\"配置服务器远程 Git\"></a>配置服务器远程 Git</h2><p>大家都知道 Git 是分布式的版本控制系统，远程仓库跟本地仓库是没有什么不同的。</p>\n<p>我的 VPS 系统是 Ubuntu 14.04 的，在 Ubuntu 上配置 Git 是相当简单的。</p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>安装 <code>git</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo apt-get install git</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>创建一个 <code>git</code> 用户，用来运行 <code>git</code> 服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo adduser git</span><br></code></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>虽说现在的仓库只有我们自己在使用，新建一个 <code>git</code> 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 <code>git</code> 用户来专门运行 <code>git</code> 服务</p>\n</blockquote>\n<h3 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h3><p>创建证书登录，把自己电脑的公钥，也就是 <code>~/.ssh/id_rsa.pub</code> 文件里的内容添加到服务器的 <code>/home/git/.ssh/authorized_keys</code> 文件中，添加公钥之后可以防止每次 push 都输入密码。</p>\n<blockquote>\n<p>如果你之前没有生成过公钥，则可能就没有 <code>id_rsa.pub</code> 文件，具体的生成方法，可以<a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\">参考这里</a>。</p>\n</blockquote>\n<h3 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h3><p>初始化 Git 仓库，我是将其放在 <code>/var/repo/blog.git</code> 目录下的：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo mkdir /var/repo$ <span class=\"hljs-built_in\">cd</span> /var/repo$ sudo git init --bare blog.git</span><br></code></pre></td></tr></table></figure>\n\n<p>使用 <code>--bare</code> 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p>\n<h3 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h3><p>配置 git hooks，关于 hooks 的详情内容可以<a href=\"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90\">参考这里</a>。</p>\n<p>我们这里要使用的是 <code>post-receive</code> 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行。</p>\n<p>在 <code>blog.git/hooks</code> 目录下新建一个 <code>post-receive</code> 文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd /var/repo/blog.git/hooks$ vim post-receive<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>post-receive</code> 文件中写入如下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">!/bin/sh</span><br>git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f<br></code></pre></td></tr></table></figure>\n\n<p>注意，<code>/var/www/hexo</code> 要换成你自己的部署目录，一般可能都是 <code>/var/www/html</code>。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。</p>\n<p>不要忘记设置这个文件的可执行权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">chmod +x post-receive<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h3><p>改变 <code>blog.git</code> 目录的拥有者为 <code>git</code> 用户：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo chown -R git:git blog.git</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第七步\"><a href=\"#第七步\" class=\"headerlink\" title=\"第七步\"></a>第七步</h3><p>禁用 <code>git</code> 用户的 shell 登录权限。</p>\n<p>出于安全考虑，我们要让 <code>git</code> 用户不能通过 shell 登录。可以编辑 <code>/etc/passwd</code> 来实现，在 <code>/etc/passwd</code>中找到类似下面的一行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">git:x:1001:1001:,,,:/home/git:/bin/bash<br></code></pre></td></tr></table></figure>\n\n<p>将其改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell<br></code></pre></td></tr></table></figure>\n\n<p>这样 <code>git</code> 用户可以通过 ssh 正常使用 git，但是无法登录 sehll。</p>\n<p>至此，服务器端的配置就完成了。</p>\n<h2 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h2><p>配置你的 hexo 博客可以自动 deploy 到服务器上，再也不用 ftp 上传了。</p>\n<p>修改 hexo 目录下的 <code>_config.yml</code> 文件，找到 [deploy] 条目，并修改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">deploy:type: gitrepo: git@www.swiftyper.com:/var/repo/blog.gitbranch: master<br></code></pre></td></tr></table></figure>\n\n<p>要注意切换成你自己的服务器地址，以及服务器端 git 仓库的目录。</p>\n<p>本地配置就是如此地简单。至此，我们的 hexo 自动部署已经全部配置好了。</p>\n<h2 id=\"使-zhuang-用-bi\"><a href=\"#使-zhuang-用-bi\" class=\"headerlink\" title=\"使(zhuang)用(bi)\"></a>使(zhuang)用(bi)</h2><p>从此以后，要发新博客的步骤不要太简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">hexo new &quot;new-post&quot; # bla..bla..bla.. $ hexo clean &amp;&amp; hexo generate --deploy<br></code></pre></td></tr></table></figure>\n\n<p>有没有很酷很方便，一条命令就可以将博客自动部署到自己的 VPS 上了，开始快乐地写博客吧。</p>\n","site":{"data":{}},"wordcount":2106,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"使用-Git-Hook-自动部署-Hexo-到个人-VPS\"><a href=\"#使用-Git-Hook-自动部署-Hexo-到个人-VPS\" class=\"headerlink\" title=\"使用 Git Hook 自动部署 Hexo 到个人 VPS\"></a><a href=\"https://www.cnblogs.com/navysummer/p/9842065.html\">使用 Git Hook 自动部署 Hexo 到个人 VPS</a></h1><h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><p>既然我的标题都已经那样写了，当然这个小节就不是本篇文章的重点了。</p>\n<p>关于 Hexo 的安装跟配置，其实网上已经有很多很多文章了，随便一搜一大把。这里就有一篇超详细的，大家可以<a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">参考一下</a>。</p>\n<p>但是，网上的教程大多数都是直接将 Hexo 部署到 Github Pages 上面的，虽说这种方法很方便，也很主流，但是用别人的东西难免会有各种各样的限制。再加上我已经有一个 VPS 了，当然希望直接使用自己的服务器来部署博客了。</p>\n<p>要把 Hexo 部署到自己的 VPS 上面，最直观的做法就是，在本机上先 <code>hexo generate</code>，然后再将生成的静态 HTML 文件通过 <code>ftp</code> 或者其它工具上传到服务器上。这种方法虽说很直观，但是操作起来其实很繁琐，比之前直接操作 wordpress 后台还要麻烦很多，而且也很容易出错，一不小心就心出于丢失文件等问题。当然，最重要的一点还是，这一点也不 geek。用了 hexo 这么酷的系统来写博客，却要那样来手动部署不是显得弱爆了么。</p>\n<p>经过我的一番搜索，终于找到一种很方便的方法，那就是使用 git hooks 来实现自动化部署。</p>\n<h2 id=\"配置服务器远程-Git\"><a href=\"#配置服务器远程-Git\" class=\"headerlink\" title=\"配置服务器远程 Git\"></a>配置服务器远程 Git</h2><p>大家都知道 Git 是分布式的版本控制系统，远程仓库跟本地仓库是没有什么不同的。</p>\n<p>我的 VPS 系统是 Ubuntu 14.04 的，在 Ubuntu 上配置 Git 是相当简单的。</p>\n<h3 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h3><p>安装 <code>git</code>：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo apt-get install git</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h3><p>创建一个 <code>git</code> 用户，用来运行 <code>git</code> 服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo adduser git</span><br></code></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>虽说现在的仓库只有我们自己在使用，新建一个 <code>git</code> 用户显得不是很有必要，但是为了安全起见，还是建议使用单独的 <code>git</code> 用户来专门运行 <code>git</code> 服务</p>\n</blockquote>\n<h3 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h3><p>创建证书登录，把自己电脑的公钥，也就是 <code>~/.ssh/id_rsa.pub</code> 文件里的内容添加到服务器的 <code>/home/git/.ssh/authorized_keys</code> 文件中，添加公钥之后可以防止每次 push 都输入密码。</p>\n<blockquote>\n<p>如果你之前没有生成过公钥，则可能就没有 <code>id_rsa.pub</code> 文件，具体的生成方法，可以<a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\">参考这里</a>。</p>\n</blockquote>\n<h3 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h3><p>初始化 Git 仓库，我是将其放在 <code>/var/repo/blog.git</code> 目录下的：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo mkdir /var/repo$ <span class=\"hljs-built_in\">cd</span> /var/repo$ sudo git init --bare blog.git</span><br></code></pre></td></tr></table></figure>\n\n<p>使用 <code>--bare</code> 参数，Git 就会创建一个裸仓库，裸仓库没有工作区，我们不会在裸仓库上进行操作，它只为共享而存在。</p>\n<h3 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h3><p>配置 git hooks，关于 hooks 的详情内容可以<a href=\"https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90\">参考这里</a>。</p>\n<p>我们这里要使用的是 <code>post-receive</code> 的 hook，这个 hook 会在整个 git 操作过程完结以后被运行。</p>\n<p>在 <code>blog.git/hooks</code> 目录下新建一个 <code>post-receive</code> 文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd /var/repo/blog.git/hooks$ vim post-receive<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>post-receive</code> 文件中写入如下内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">!/bin/sh</span><br>git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f<br></code></pre></td></tr></table></figure>\n\n<p>注意，<code>/var/www/hexo</code> 要换成你自己的部署目录，一般可能都是 <code>/var/www/html</code>。上面那句 git 命令可以在我们每次 push 完之后，把部署目录更新到博客的最新生成状态。这样便可以完成达到自动部署的目的了。</p>\n<p>不要忘记设置这个文件的可执行权限：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">chmod +x post-receive<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h3><p>改变 <code>blog.git</code> 目录的拥有者为 <code>git</code> 用户：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> sudo chown -R git:git blog.git</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"第七步\"><a href=\"#第七步\" class=\"headerlink\" title=\"第七步\"></a>第七步</h3><p>禁用 <code>git</code> 用户的 shell 登录权限。</p>\n<p>出于安全考虑，我们要让 <code>git</code> 用户不能通过 shell 登录。可以编辑 <code>/etc/passwd</code> 来实现，在 <code>/etc/passwd</code>中找到类似下面的一行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">git:x:1001:1001:,,,:/home/git:/bin/bash<br></code></pre></td></tr></table></figure>\n\n<p>将其改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell<br></code></pre></td></tr></table></figure>\n\n<p>这样 <code>git</code> 用户可以通过 ssh 正常使用 git，但是无法登录 sehll。</p>\n<p>至此，服务器端的配置就完成了。</p>\n<h2 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h2><p>配置你的 hexo 博客可以自动 deploy 到服务器上，再也不用 ftp 上传了。</p>\n<p>修改 hexo 目录下的 <code>_config.yml</code> 文件，找到 [deploy] 条目，并修改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">deploy:type: gitrepo: git@www.swiftyper.com:/var/repo/blog.gitbranch: master<br></code></pre></td></tr></table></figure>\n\n<p>要注意切换成你自己的服务器地址，以及服务器端 git 仓库的目录。</p>\n<p>本地配置就是如此地简单。至此，我们的 hexo 自动部署已经全部配置好了。</p>\n<h2 id=\"使-zhuang-用-bi\"><a href=\"#使-zhuang-用-bi\" class=\"headerlink\" title=\"使(zhuang)用(bi)\"></a>使(zhuang)用(bi)</h2><p>从此以后，要发新博客的步骤不要太简单：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">hexo new &quot;new-post&quot; # bla..bla..bla.. $ hexo clean &amp;&amp; hexo generate --deploy<br></code></pre></td></tr></table></figure>\n\n<p>有没有很酷很方便，一条命令就可以将博客自动部署到自己的 VPS 上了，开始快乐地写博客吧。</p>\n"},{"title":"case-when使用方式","date":"2021-12-15T11:03:20.000Z","urlname":"case-when使用方式","_content":"\n> 梦在前方，路在脚下！\n\n```sql\nSELECT CODE,CASE\n\t\tWHEN use_status = \"0\" THEN\n\t\t\"未占用\" \n\t\tWHEN use_status = \"1\" THEN\n\t\t\"待入区\" \n\t\tWHEN use_status = \"2\" THEN\n\t\t\"占用中\" \n\tEND AS useStatus,\n\ttarget_code AS targetCode,\n\tlz_mode AS lzMode,\nCASE\n\t\tWHEN lz_mode = \"0\" THEN \"近身\"\n\t\twhen lz_mode = \"1\" THEN \"非近身\" \n\tEND AS lzModeTxt \nFROM\n\t( SELECT * FROM base_fictitious_rooms WHERE base_fictitious_rooms.type = 2 ) AS base_fictitious_rooms\n\tLEFT JOIN ( SELECT * FROM rel_target_room WHERE rel_target_room.state_review IS NULL ) rel_target_room ON base_fictitious_rooms.id = rel_target_room.room_id\n\tLEFT JOIN ( SELECT * FROM cas_targets WHERE cas_targets.state_review IS NULL ) AS cas_targets ON rel_target_room.target_id = cas_targets.id \nORDER BY\n\t`code`\n```\n\n","source":"_posts/case-when使用方式.md","raw":"---\ntitle: case-when使用方式\ncategories:\n  - mysql\ntags:\n  - sql\ndate: 2021-12-15 19:03:20\nurlname: case-when使用方式\n---\n\n> 梦在前方，路在脚下！\n\n```sql\nSELECT CODE,CASE\n\t\tWHEN use_status = \"0\" THEN\n\t\t\"未占用\" \n\t\tWHEN use_status = \"1\" THEN\n\t\t\"待入区\" \n\t\tWHEN use_status = \"2\" THEN\n\t\t\"占用中\" \n\tEND AS useStatus,\n\ttarget_code AS targetCode,\n\tlz_mode AS lzMode,\nCASE\n\t\tWHEN lz_mode = \"0\" THEN \"近身\"\n\t\twhen lz_mode = \"1\" THEN \"非近身\" \n\tEND AS lzModeTxt \nFROM\n\t( SELECT * FROM base_fictitious_rooms WHERE base_fictitious_rooms.type = 2 ) AS base_fictitious_rooms\n\tLEFT JOIN ( SELECT * FROM rel_target_room WHERE rel_target_room.state_review IS NULL ) rel_target_room ON base_fictitious_rooms.id = rel_target_room.room_id\n\tLEFT JOIN ( SELECT * FROM cas_targets WHERE cas_targets.state_review IS NULL ) AS cas_targets ON rel_target_room.target_id = cas_targets.id \nORDER BY\n\t`code`\n```\n\n","slug":"case-when使用方式","published":1,"updated":"2021-12-15T11:03:52.000Z","_id":"ckx7fdt9d000vospw25uvcv4r","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> CODE,<span class=\"hljs-keyword\">CASE</span><br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;0&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;未占用&quot; <br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;1&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;待入区&quot; <br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;2&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;占用中&quot; <br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> useStatus,<br>\ttarget_code <span class=\"hljs-keyword\">AS</span> targetCode,<br>\tlz_mode <span class=\"hljs-keyword\">AS</span> lzMode,<br><span class=\"hljs-keyword\">CASE</span><br>\t\t<span class=\"hljs-keyword\">WHEN</span> lz_mode <span class=\"hljs-operator\">=</span> &quot;0&quot; <span class=\"hljs-keyword\">THEN</span> &quot;近身&quot;<br>\t\t<span class=\"hljs-keyword\">when</span> lz_mode <span class=\"hljs-operator\">=</span> &quot;1&quot; <span class=\"hljs-keyword\">THEN</span> &quot;非近身&quot; <br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> lzModeTxt <br><span class=\"hljs-keyword\">FROM</span><br>\t( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> base_fictitious_rooms <span class=\"hljs-keyword\">WHERE</span> base_fictitious_rooms.type <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span> ) <span class=\"hljs-keyword\">AS</span> base_fictitious_rooms<br>\t<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> ( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> rel_target_room <span class=\"hljs-keyword\">WHERE</span> rel_target_room.state_review <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span> ) rel_target_room <span class=\"hljs-keyword\">ON</span> base_fictitious_rooms.id <span class=\"hljs-operator\">=</span> rel_target_room.room_id<br>\t<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> ( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> cas_targets <span class=\"hljs-keyword\">WHERE</span> cas_targets.state_review <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span> ) <span class=\"hljs-keyword\">AS</span> cas_targets <span class=\"hljs-keyword\">ON</span> rel_target_room.target_id <span class=\"hljs-operator\">=</span> cas_targets.id <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span><br>\t`code`<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":726,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SELECT</span> CODE,<span class=\"hljs-keyword\">CASE</span><br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;0&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;未占用&quot; <br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;1&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;待入区&quot; <br>\t\t<span class=\"hljs-keyword\">WHEN</span> use_status <span class=\"hljs-operator\">=</span> &quot;2&quot; <span class=\"hljs-keyword\">THEN</span><br>\t\t&quot;占用中&quot; <br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> useStatus,<br>\ttarget_code <span class=\"hljs-keyword\">AS</span> targetCode,<br>\tlz_mode <span class=\"hljs-keyword\">AS</span> lzMode,<br><span class=\"hljs-keyword\">CASE</span><br>\t\t<span class=\"hljs-keyword\">WHEN</span> lz_mode <span class=\"hljs-operator\">=</span> &quot;0&quot; <span class=\"hljs-keyword\">THEN</span> &quot;近身&quot;<br>\t\t<span class=\"hljs-keyword\">when</span> lz_mode <span class=\"hljs-operator\">=</span> &quot;1&quot; <span class=\"hljs-keyword\">THEN</span> &quot;非近身&quot; <br>\t<span class=\"hljs-keyword\">END</span> <span class=\"hljs-keyword\">AS</span> lzModeTxt <br><span class=\"hljs-keyword\">FROM</span><br>\t( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> base_fictitious_rooms <span class=\"hljs-keyword\">WHERE</span> base_fictitious_rooms.type <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span> ) <span class=\"hljs-keyword\">AS</span> base_fictitious_rooms<br>\t<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> ( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> rel_target_room <span class=\"hljs-keyword\">WHERE</span> rel_target_room.state_review <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span> ) rel_target_room <span class=\"hljs-keyword\">ON</span> base_fictitious_rooms.id <span class=\"hljs-operator\">=</span> rel_target_room.room_id<br>\t<span class=\"hljs-keyword\">LEFT</span> <span class=\"hljs-keyword\">JOIN</span> ( <span class=\"hljs-keyword\">SELECT</span> <span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">FROM</span> cas_targets <span class=\"hljs-keyword\">WHERE</span> cas_targets.state_review <span class=\"hljs-keyword\">IS</span> <span class=\"hljs-keyword\">NULL</span> ) <span class=\"hljs-keyword\">AS</span> cas_targets <span class=\"hljs-keyword\">ON</span> rel_target_room.target_id <span class=\"hljs-operator\">=</span> cas_targets.id <br><span class=\"hljs-keyword\">ORDER</span> <span class=\"hljs-keyword\">BY</span><br>\t`code`<br></code></pre></td></tr></table></figure>\n\n"},{"title":"mysql创建只读用户","date":"2021-12-15T11:04:57.000Z","urlname":"mysql创建只读用户","_content":"\n> 梦在前方，路在脚下！\n\n建立只读用户\n\n```sql\nCREATE USER `reader`@`%` IDENTIFIED BY 'jw@2021@619@reader';\n\nGRANT Select, Show Databases, Show View ON *.* TO `reader`@`%`;\n```\n\n修改密码\n\n```sql\nSET PASSWORD FOR `reader`@`%` = PASSWORD('jw@2021@619@reader');\n```\n\n","source":"_posts/mysql创建只读用户.md","raw":"---\ntitle: mysql创建只读用户\ncategories:\n  - mysql\ntags:\n  - sql\ndate: 2021-12-15 19:04:57\nurlname: mysql创建只读用户\n---\n\n> 梦在前方，路在脚下！\n\n建立只读用户\n\n```sql\nCREATE USER `reader`@`%` IDENTIFIED BY 'jw@2021@619@reader';\n\nGRANT Select, Show Databases, Show View ON *.* TO `reader`@`%`;\n```\n\n修改密码\n\n```sql\nSET PASSWORD FOR `reader`@`%` = PASSWORD('jw@2021@619@reader');\n```\n\n","slug":"mysql创建只读用户","published":1,"updated":"2021-12-15T11:15:20.000Z","_id":"ckx7ffvud0012ospwdzpn3u8u","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>建立只读用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> `reader`@`<span class=\"hljs-operator\">%</span>` IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;jw@2021@619@reader&#x27;</span>;<br><br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">Select</span>, <span class=\"hljs-keyword\">Show</span> Databases, <span class=\"hljs-keyword\">Show</span> <span class=\"hljs-keyword\">View</span> <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> `reader`@`<span class=\"hljs-operator\">%</span>`;<br></code></pre></td></tr></table></figure>\n\n<p>修改密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SET</span> PASSWORD <span class=\"hljs-keyword\">FOR</span> `reader`@`<span class=\"hljs-operator\">%</span>` <span class=\"hljs-operator\">=</span> PASSWORD(<span class=\"hljs-string\">&#x27;jw@2021@619@reader&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":211,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<p>建立只读用户</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> `reader`@`<span class=\"hljs-operator\">%</span>` IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;jw@2021@619@reader&#x27;</span>;<br><br><span class=\"hljs-keyword\">GRANT</span> <span class=\"hljs-keyword\">Select</span>, <span class=\"hljs-keyword\">Show</span> Databases, <span class=\"hljs-keyword\">Show</span> <span class=\"hljs-keyword\">View</span> <span class=\"hljs-keyword\">ON</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">TO</span> `reader`@`<span class=\"hljs-operator\">%</span>`;<br></code></pre></td></tr></table></figure>\n\n<p>修改密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\"><span class=\"hljs-keyword\">SET</span> PASSWORD <span class=\"hljs-keyword\">FOR</span> `reader`@`<span class=\"hljs-operator\">%</span>` <span class=\"hljs-operator\">=</span> PASSWORD(<span class=\"hljs-string\">&#x27;jw@2021@619@reader&#x27;</span>);<br></code></pre></td></tr></table></figure>\n\n"},{"title":"mysql创建新用户并授权","date":"2021-12-15T11:06:14.000Z","urlname":"mysql创建新用户","_content":"\n> 梦在前方，路在脚下！\n\n```sql\nmysql> CREATE USER 'username'@'host' IDENTIFIED BY 'password'; //创建新用户\n\nmysql> grant all privileges on *.* to 'username'@'%'; //赋权限,%表示所有(host) \n\nmysql> flush privileges //刷新数据库\n\nmysql> update user set password=password(”123456″) where user=’root’;(设置用户名密码) \n\nmysql> show grants for root@\"%\"; 查看当前用户的权限\n```\n\n","source":"_posts/mysql创建新用户并授权.md","raw":"---\ntitle: mysql创建新用户并授权\ncategories:\n  - mysql\ntags:\n  - sql\ndate: 2021-12-15 19:06:14\nurlname: mysql创建新用户\n---\n\n> 梦在前方，路在脚下！\n\n```sql\nmysql> CREATE USER 'username'@'host' IDENTIFIED BY 'password'; //创建新用户\n\nmysql> grant all privileges on *.* to 'username'@'%'; //赋权限,%表示所有(host) \n\nmysql> flush privileges //刷新数据库\n\nmysql> update user set password=password(”123456″) where user=’root’;(设置用户名密码) \n\nmysql> show grants for root@\"%\"; 查看当前用户的权限\n```\n\n","slug":"mysql创建新用户并授权","published":1,"updated":"2021-12-15T11:15:04.000Z","_id":"ckx7fhji70015ospwd1ei85c2","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;username&#x27;</span>@<span class=\"hljs-string\">&#x27;host&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;password&#x27;</span>; <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>创建新用户<br><br>mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">grant</span> <span class=\"hljs-keyword\">all</span> privileges <span class=\"hljs-keyword\">on</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">to</span> <span class=\"hljs-string\">&#x27;username&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>; <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>赋权限,<span class=\"hljs-operator\">%</span>表示所有(host) <br><br>mysql<span class=\"hljs-operator\">&gt;</span> flush privileges <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>刷新数据库<br><br>mysql<span class=\"hljs-operator\">&gt;</span> update <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">set</span> password<span class=\"hljs-operator\">=</span>password(”<span class=\"hljs-number\">123456</span>″) <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">user</span><span class=\"hljs-operator\">=</span>’root’;(设置用户名密码) <br><br>mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">show</span> grants <span class=\"hljs-keyword\">for</span> root@&quot;%&quot;; 查看当前用户的权限<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":357,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sql\">mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">CREATE</span> <span class=\"hljs-keyword\">USER</span> <span class=\"hljs-string\">&#x27;username&#x27;</span>@<span class=\"hljs-string\">&#x27;host&#x27;</span> IDENTIFIED <span class=\"hljs-keyword\">BY</span> <span class=\"hljs-string\">&#x27;password&#x27;</span>; <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>创建新用户<br><br>mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">grant</span> <span class=\"hljs-keyword\">all</span> privileges <span class=\"hljs-keyword\">on</span> <span class=\"hljs-operator\">*</span>.<span class=\"hljs-operator\">*</span> <span class=\"hljs-keyword\">to</span> <span class=\"hljs-string\">&#x27;username&#x27;</span>@<span class=\"hljs-string\">&#x27;%&#x27;</span>; <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>赋权限,<span class=\"hljs-operator\">%</span>表示所有(host) <br><br>mysql<span class=\"hljs-operator\">&gt;</span> flush privileges <span class=\"hljs-operator\">/</span><span class=\"hljs-operator\">/</span>刷新数据库<br><br>mysql<span class=\"hljs-operator\">&gt;</span> update <span class=\"hljs-keyword\">user</span> <span class=\"hljs-keyword\">set</span> password<span class=\"hljs-operator\">=</span>password(”<span class=\"hljs-number\">123456</span>″) <span class=\"hljs-keyword\">where</span> <span class=\"hljs-keyword\">user</span><span class=\"hljs-operator\">=</span>’root’;(设置用户名密码) <br><br>mysql<span class=\"hljs-operator\">&gt;</span> <span class=\"hljs-keyword\">show</span> grants <span class=\"hljs-keyword\">for</span> root@&quot;%&quot;; 查看当前用户的权限<br></code></pre></td></tr></table></figure>\n\n"},{"title":"linux防火墙管理","date":"2021-12-15T11:21:58.000Z","urlname":"linux防火墙配置","_content":"\n> 梦在前方，路在脚下！\n\n## linux防火墙配置\n\n### **基本指令**\n\n##### 启动防火墙\n\n```shell\nsystemctl start firewalld\n```\n\n##### 关闭防火墙\n\n```shell\nsystemctl stop firewalld\n```\n\n##### 重启防火墙\n\n```shell\nsystemctl restart firewalld\n```\n\n##### 查看状态\n\n```shell\nsystemctl status firewalld\n```\n\n##### 开机禁用\n\n```shell\nsystemctl disable firewalld\n```\n\n##### 开机启用\n\n```shell\nsystemctl enable firewalld\n```\n\n##### 查看防火墙是否开机启动\n\n```shell\nsystemctl is-enabled firewalld.service\n```\n\n##### 查看本机已经启用的监听端口\n\n```shell\nss -ant\n```\n\n##### 查看防火墙所有信息\n\n```shell\nfirewall-cmd --list-all\n```\n\n##### 查看防火墙开放端口信息\n\n```shell\nfirewall-cmd --list-ports\n```\n\n##### 放行端口\n\n```shell\nfirewall-cmd --permanent --add-port=<port>/tcp\n```\n\n参数介绍：\n\nfirewall-cmd：是Linux提供的操作firewall的一个工具；\n\n--permanent：表示设置为持久；\n\n--add-port：标识添加的端口；\n\n还可以加上—zone,表示把端口制定到具体的zone配置文件中，例如--zone=public（这里的public就是在/etc/firewall/zones下边的public.xml）\n\n##### 检查端口状态\n\n```shell\nfirewall-cmd --query-port=6379/tcp\n```\n\n##### 删除端口\n\n```shell\nfirewall-cmd --zone=public --remove-port=80/tcp --permanent\n```\n\n","source":"_posts/linux防火墙管理.md","raw":"---\ntitle: linux防火墙管理\ncategories:\n  - linux\ntags:\n  - 防火墙\ndate: 2021-12-15 19:21:58\nurlname: linux防火墙配置\n---\n\n> 梦在前方，路在脚下！\n\n## linux防火墙配置\n\n### **基本指令**\n\n##### 启动防火墙\n\n```shell\nsystemctl start firewalld\n```\n\n##### 关闭防火墙\n\n```shell\nsystemctl stop firewalld\n```\n\n##### 重启防火墙\n\n```shell\nsystemctl restart firewalld\n```\n\n##### 查看状态\n\n```shell\nsystemctl status firewalld\n```\n\n##### 开机禁用\n\n```shell\nsystemctl disable firewalld\n```\n\n##### 开机启用\n\n```shell\nsystemctl enable firewalld\n```\n\n##### 查看防火墙是否开机启动\n\n```shell\nsystemctl is-enabled firewalld.service\n```\n\n##### 查看本机已经启用的监听端口\n\n```shell\nss -ant\n```\n\n##### 查看防火墙所有信息\n\n```shell\nfirewall-cmd --list-all\n```\n\n##### 查看防火墙开放端口信息\n\n```shell\nfirewall-cmd --list-ports\n```\n\n##### 放行端口\n\n```shell\nfirewall-cmd --permanent --add-port=<port>/tcp\n```\n\n参数介绍：\n\nfirewall-cmd：是Linux提供的操作firewall的一个工具；\n\n--permanent：表示设置为持久；\n\n--add-port：标识添加的端口；\n\n还可以加上—zone,表示把端口制定到具体的zone配置文件中，例如--zone=public（这里的public就是在/etc/firewall/zones下边的public.xml）\n\n##### 检查端口状态\n\n```shell\nfirewall-cmd --query-port=6379/tcp\n```\n\n##### 删除端口\n\n```shell\nfirewall-cmd --zone=public --remove-port=80/tcp --permanent\n```\n\n","slug":"linux防火墙管理","published":1,"updated":"2021-12-15T11:22:42.000Z","_id":"ckx7g1s2y00000wpw3wjqaoca","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h2 id=\"linux防火墙配置\"><a href=\"#linux防火墙配置\" class=\"headerlink\" title=\"linux防火墙配置\"></a>linux防火墙配置</h2><h3 id=\"基本指令\"><a href=\"#基本指令\" class=\"headerlink\" title=\"基本指令\"></a><strong>基本指令</strong></h3><h5 id=\"启动防火墙\"><a href=\"#启动防火墙\" class=\"headerlink\" title=\"启动防火墙\"></a>启动防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl start firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"关闭防火墙\"><a href=\"#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl stop firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"重启防火墙\"><a href=\"#重启防火墙\" class=\"headerlink\" title=\"重启防火墙\"></a>重启防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl status firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"开机禁用\"><a href=\"#开机禁用\" class=\"headerlink\" title=\"开机禁用\"></a>开机禁用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl disable firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"开机启用\"><a href=\"#开机启用\" class=\"headerlink\" title=\"开机启用\"></a>开机启用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl enable firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙是否开机启动\"><a href=\"#查看防火墙是否开机启动\" class=\"headerlink\" title=\"查看防火墙是否开机启动\"></a>查看防火墙是否开机启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl is-enabled firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看本机已经启用的监听端口\"><a href=\"#查看本机已经启用的监听端口\" class=\"headerlink\" title=\"查看本机已经启用的监听端口\"></a>查看本机已经启用的监听端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ss -ant<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙所有信息\"><a href=\"#查看防火墙所有信息\" class=\"headerlink\" title=\"查看防火墙所有信息\"></a>查看防火墙所有信息</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --list-all<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙开放端口信息\"><a href=\"#查看防火墙开放端口信息\" class=\"headerlink\" title=\"查看防火墙开放端口信息\"></a>查看防火墙开放端口信息</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --list-ports<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"放行端口\"><a href=\"#放行端口\" class=\"headerlink\" title=\"放行端口\"></a>放行端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --permanent --add-port=&lt;port&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>参数介绍：</p>\n<p>firewall-cmd：是Linux提供的操作firewall的一个工具；</p>\n<p>–permanent：表示设置为持久；</p>\n<p>–add-port：标识添加的端口；</p>\n<p>还可以加上—zone,表示把端口制定到具体的zone配置文件中，例如–zone=public（这里的public就是在/etc/firewall/zones下边的public.xml）</p>\n<h5 id=\"检查端口状态\"><a href=\"#检查端口状态\" class=\"headerlink\" title=\"检查端口状态\"></a>检查端口状态</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --query-port=6379/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"删除端口\"><a href=\"#删除端口\" class=\"headerlink\" title=\"删除端口\"></a>删除端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --zone=public --remove-port=80/tcp --permanent<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":664,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h2 id=\"linux防火墙配置\"><a href=\"#linux防火墙配置\" class=\"headerlink\" title=\"linux防火墙配置\"></a>linux防火墙配置</h2><h3 id=\"基本指令\"><a href=\"#基本指令\" class=\"headerlink\" title=\"基本指令\"></a><strong>基本指令</strong></h3><h5 id=\"启动防火墙\"><a href=\"#启动防火墙\" class=\"headerlink\" title=\"启动防火墙\"></a>启动防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl start firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"关闭防火墙\"><a href=\"#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl stop firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"重启防火墙\"><a href=\"#重启防火墙\" class=\"headerlink\" title=\"重启防火墙\"></a>重启防火墙</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看状态\"><a href=\"#查看状态\" class=\"headerlink\" title=\"查看状态\"></a>查看状态</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl status firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"开机禁用\"><a href=\"#开机禁用\" class=\"headerlink\" title=\"开机禁用\"></a>开机禁用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl disable firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"开机启用\"><a href=\"#开机启用\" class=\"headerlink\" title=\"开机启用\"></a>开机启用</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl enable firewalld<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙是否开机启动\"><a href=\"#查看防火墙是否开机启动\" class=\"headerlink\" title=\"查看防火墙是否开机启动\"></a>查看防火墙是否开机启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl is-enabled firewalld.service<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看本机已经启用的监听端口\"><a href=\"#查看本机已经启用的监听端口\" class=\"headerlink\" title=\"查看本机已经启用的监听端口\"></a>查看本机已经启用的监听端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">ss -ant<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙所有信息\"><a href=\"#查看防火墙所有信息\" class=\"headerlink\" title=\"查看防火墙所有信息\"></a>查看防火墙所有信息</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --list-all<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"查看防火墙开放端口信息\"><a href=\"#查看防火墙开放端口信息\" class=\"headerlink\" title=\"查看防火墙开放端口信息\"></a>查看防火墙开放端口信息</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --list-ports<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"放行端口\"><a href=\"#放行端口\" class=\"headerlink\" title=\"放行端口\"></a>放行端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --permanent --add-port=&lt;port&gt;/tcp<br></code></pre></td></tr></table></figure>\n\n<p>参数介绍：</p>\n<p>firewall-cmd：是Linux提供的操作firewall的一个工具；</p>\n<p>–permanent：表示设置为持久；</p>\n<p>–add-port：标识添加的端口；</p>\n<p>还可以加上—zone,表示把端口制定到具体的zone配置文件中，例如–zone=public（这里的public就是在/etc/firewall/zones下边的public.xml）</p>\n<h5 id=\"检查端口状态\"><a href=\"#检查端口状态\" class=\"headerlink\" title=\"检查端口状态\"></a>检查端口状态</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --query-port=6379/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"删除端口\"><a href=\"#删除端口\" class=\"headerlink\" title=\"删除端口\"></a>删除端口</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">firewall-cmd --zone=public --remove-port=80/tcp --permanent<br></code></pre></td></tr></table></figure>\n\n"},{"title":"nacos安装集群","date":"2021-12-15T11:23:33.000Z","urlname":"nacos安装集群","_content":"\n> 梦在前方，路在脚下！\n\n\n\n# nacos安装集群\n\n##### 准备\n\n四个nacos虚拟机\n\n192.168.50.53\n192.168.50.54\n192.168.50.55\n\n一台nginx转发虚拟机\n\n192.168.50.56\n\n一台mysql虚拟机\n\n192.168.50.60\n\n##### 导入外置数据库脚本\n\n![image-20210914222933197](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222933197.png)\n\n##### 开启防火墙\n\nnacos开启端口8848\n\n```sh\nfirewall-cmd --permanent --add-port=8848/tcp\nsystemctl restart firewalld\nfirewall-cmd --query-port=8848/tcp\n```\n\n##### 修改配置外置数据源\n\n```yaml\n#*************** Config Module Related Configurations ***************#\n### If use MySQL as datasource:\nspring.datasource.platform=mysql\n\n### Count of DB:\ndb.num=1\n\n### Connect URL of DB:\ndb.url.0=jdbc:mysql://192.168.50.60:3306/nacos?characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC\ndb.user.0=root\ndb.password.0=password\n\n```\n\n##### 修改集群配置\n\n###### 复制文件\n\n```sh\ncp cluster.conf.example cluster.conf\n```\n\n修改内容如下\n\n```sh\n192.168.50.53:8848\n192.168.50.54:8848\n192.168.50.55:8848\n```\n\n将三台服务器都按照上面的步骤进行设置，然后启动\n\n```shell\n/usr/local/nacos/bin/startup.sh\n```\n\n分别访问 能否进入\n\n![image-20210914222813648](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222813648.png)\n\n![image-20210914224045767](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914224045767.png)\n\n##### 设置nginx进行反向代理\n\n```sh\nvim nginx.conf\n```\n\n内容如下\n\n```\n....\n    #gzip  on;\n    upstream nacosCluster{\n        server 192.168.50.53:8848;\n        server 192.168.50.54:8848;\n        server 192.168.50.55:8848;\n    }\n    server {\n        listen 8848;\n        server_name nacos;\n        \n        add_header backendIP $upstream_addr;\n        add_header backendCode $upstream_status;\n\n        location /nacos/ {\n            proxy_pass http://nacosCluster/nacos/;\n        }\n    }\n\n....\n```\n\nadd_header backendIP $upstream_addr;\nadd_header backendCode $upstream_status;\n\n可以看出反向代理到了什么地方，可加可不加。\n\n##### 开启nginx端口\n\n```\nfirewall-cmd --permanent --add-port=8848/tcp\nsystemctl restart firewalld\nfirewall-cmd --query-port=8848/tcp\n```\n\n##### 测试\n\n访问http://192.168.50.56:8848/nacos/index.html#/login\n\n创建一个测试用户\n\n![image-20210914225141864](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225141864.png)\n\n![image-20210914225150647](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225150647.png)\n\n##### 检查数据库\n\n![image-20210914225203767](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225203767.png)\n\n","source":"_posts/nacos安装集群.md","raw":"---\ntitle: nacos安装集群\ncategories:\n  - 微服务\n  - nacos\ntags:\n  - 微服务\n  - nacos\ndate: 2021-12-15 19:23:33\nurlname: nacos安装集群\n---\n\n> 梦在前方，路在脚下！\n\n\n\n# nacos安装集群\n\n##### 准备\n\n四个nacos虚拟机\n\n192.168.50.53\n192.168.50.54\n192.168.50.55\n\n一台nginx转发虚拟机\n\n192.168.50.56\n\n一台mysql虚拟机\n\n192.168.50.60\n\n##### 导入外置数据库脚本\n\n![image-20210914222933197](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222933197.png)\n\n##### 开启防火墙\n\nnacos开启端口8848\n\n```sh\nfirewall-cmd --permanent --add-port=8848/tcp\nsystemctl restart firewalld\nfirewall-cmd --query-port=8848/tcp\n```\n\n##### 修改配置外置数据源\n\n```yaml\n#*************** Config Module Related Configurations ***************#\n### If use MySQL as datasource:\nspring.datasource.platform=mysql\n\n### Count of DB:\ndb.num=1\n\n### Connect URL of DB:\ndb.url.0=jdbc:mysql://192.168.50.60:3306/nacos?characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=UTC\ndb.user.0=root\ndb.password.0=password\n\n```\n\n##### 修改集群配置\n\n###### 复制文件\n\n```sh\ncp cluster.conf.example cluster.conf\n```\n\n修改内容如下\n\n```sh\n192.168.50.53:8848\n192.168.50.54:8848\n192.168.50.55:8848\n```\n\n将三台服务器都按照上面的步骤进行设置，然后启动\n\n```shell\n/usr/local/nacos/bin/startup.sh\n```\n\n分别访问 能否进入\n\n![image-20210914222813648](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222813648.png)\n\n![image-20210914224045767](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914224045767.png)\n\n##### 设置nginx进行反向代理\n\n```sh\nvim nginx.conf\n```\n\n内容如下\n\n```\n....\n    #gzip  on;\n    upstream nacosCluster{\n        server 192.168.50.53:8848;\n        server 192.168.50.54:8848;\n        server 192.168.50.55:8848;\n    }\n    server {\n        listen 8848;\n        server_name nacos;\n        \n        add_header backendIP $upstream_addr;\n        add_header backendCode $upstream_status;\n\n        location /nacos/ {\n            proxy_pass http://nacosCluster/nacos/;\n        }\n    }\n\n....\n```\n\nadd_header backendIP $upstream_addr;\nadd_header backendCode $upstream_status;\n\n可以看出反向代理到了什么地方，可加可不加。\n\n##### 开启nginx端口\n\n```\nfirewall-cmd --permanent --add-port=8848/tcp\nsystemctl restart firewalld\nfirewall-cmd --query-port=8848/tcp\n```\n\n##### 测试\n\n访问http://192.168.50.56:8848/nacos/index.html#/login\n\n创建一个测试用户\n\n![image-20210914225141864](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225141864.png)\n\n![image-20210914225150647](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225150647.png)\n\n##### 检查数据库\n\n![image-20210914225203767](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225203767.png)\n\n","slug":"nacos安装集群","published":1,"updated":"2021-12-15T11:24:22.000Z","_id":"ckx7g3tdx00050wpwfdc82iku","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"nacos安装集群\"><a href=\"#nacos安装集群\" class=\"headerlink\" title=\"nacos安装集群\"></a>nacos安装集群</h1><h5 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h5><p>四个nacos虚拟机</p>\n<p>192.168.50.53<br>192.168.50.54<br>192.168.50.55</p>\n<p>一台nginx转发虚拟机</p>\n<p>192.168.50.56</p>\n<p>一台mysql虚拟机</p>\n<p>192.168.50.60</p>\n<h5 id=\"导入外置数据库脚本\"><a href=\"#导入外置数据库脚本\" class=\"headerlink\" title=\"导入外置数据库脚本\"></a>导入外置数据库脚本</h5><p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222933197.png\" alt=\"image-20210914222933197\"></p>\n<h5 id=\"开启防火墙\"><a href=\"#开启防火墙\" class=\"headerlink\" title=\"开启防火墙\"></a>开启防火墙</h5><p>nacos开启端口8848</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">firewall-cmd --permanent --add-port=8848/tcp<br>systemctl restart firewalld<br>firewall-cmd --query-port=8848/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改配置外置数据源\"><a href=\"#修改配置外置数据源\" class=\"headerlink\" title=\"修改配置外置数据源\"></a>修改配置外置数据源</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#*************** Config Module Related Configurations ***************#</span><br><span class=\"hljs-comment\">### If use MySQL as datasource:</span><br><span class=\"hljs-string\">spring.datasource.platform=mysql</span><br><br><span class=\"hljs-comment\">### Count of DB:</span><br><span class=\"hljs-string\">db.num=1</span><br><br><span class=\"hljs-comment\">### Connect URL of DB:</span><br><span class=\"hljs-string\">db.url.0=jdbc:mysql://192.168.50.60:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class=\"hljs-string\">db.user.0=root</span><br><span class=\"hljs-string\">db.password.0=password</span><br><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改集群配置\"><a href=\"#修改集群配置\" class=\"headerlink\" title=\"修改集群配置\"></a>修改集群配置</h5><h6 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h6><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">cp cluster.conf.example cluster.conf<br></code></pre></td></tr></table></figure>\n\n<p>修改内容如下</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">192.168.50.53:8848<br>192.168.50.54:8848<br>192.168.50.55:8848<br></code></pre></td></tr></table></figure>\n\n<p>将三台服务器都按照上面的步骤进行设置，然后启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">/usr/local/nacos/bin/startup.sh<br></code></pre></td></tr></table></figure>\n\n<p>分别访问 能否进入</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222813648.png\" alt=\"image-20210914222813648\"></p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914224045767.png\" alt=\"image-20210914224045767\"></p>\n<h5 id=\"设置nginx进行反向代理\"><a href=\"#设置nginx进行反向代理\" class=\"headerlink\" title=\"设置nginx进行反向代理\"></a>设置nginx进行反向代理</h5><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">vim nginx.conf<br></code></pre></td></tr></table></figure>\n\n<p>内容如下</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\"><span class=\"hljs-code\">....</span><br><span class=\"hljs-code\">    #gzip  on;</span><br><span class=\"hljs-code\">    upstream nacosCluster&#123;</span><br><span class=\"hljs-code\">        server 192.168.50.53:8848;</span><br><span class=\"hljs-code\">        server 192.168.50.54:8848;</span><br><span class=\"hljs-code\">        server 192.168.50.55:8848;</span><br><span class=\"hljs-code\">    &#125;</span><br><span class=\"hljs-code\">    server &#123;</span><br><span class=\"hljs-code\">        listen 8848;</span><br><span class=\"hljs-code\">        server_name nacos;</span><br><span class=\"hljs-code\">        </span><br><span class=\"hljs-code\">        add_header backendIP $upstream_addr;</span><br><span class=\"hljs-code\">        add_header backendCode $upstream_status;</span><br><span class=\"hljs-code\"></span><br><span class=\"hljs-code\">        location /nacos/ &#123;</span><br><span class=\"hljs-code\">            proxy_pass http://nacosCluster/nacos/;</span><br><span class=\"hljs-code\">        &#125;</span><br><span class=\"hljs-code\">    &#125;</span><br><span class=\"hljs-code\"></span><br><span class=\"hljs-code\">....</span><br></code></pre></td></tr></table></figure>\n\n<p>add_header backendIP $upstream_addr;<br>add_header backendCode $upstream_status;</p>\n<p>可以看出反向代理到了什么地方，可加可不加。</p>\n<h5 id=\"开启nginx端口\"><a href=\"#开启nginx端口\" class=\"headerlink\" title=\"开启nginx端口\"></a>开启nginx端口</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">firewall-cmd --permanent <span class=\"hljs-attribute\">--add-port</span>=8848/tcp<br>systemctl restart firewalld<br>firewall-cmd <span class=\"hljs-attribute\">--query-port</span>=8848/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>访问<a href=\"http://192.168.50.56:8848/nacos/index.html#/login\">http://192.168.50.56:8848/nacos/index.html#/login</a></p>\n<p>创建一个测试用户</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225141864.png\" alt=\"image-20210914225141864\"></p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225150647.png\" alt=\"image-20210914225150647\"></p>\n<h5 id=\"检查数据库\"><a href=\"#检查数据库\" class=\"headerlink\" title=\"检查数据库\"></a>检查数据库</h5><p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225203767.png\" alt=\"image-20210914225203767\"></p>\n","site":{"data":{}},"wordcount":1478,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"nacos安装集群\"><a href=\"#nacos安装集群\" class=\"headerlink\" title=\"nacos安装集群\"></a>nacos安装集群</h1><h5 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h5><p>四个nacos虚拟机</p>\n<p>192.168.50.53<br>192.168.50.54<br>192.168.50.55</p>\n<p>一台nginx转发虚拟机</p>\n<p>192.168.50.56</p>\n<p>一台mysql虚拟机</p>\n<p>192.168.50.60</p>\n<h5 id=\"导入外置数据库脚本\"><a href=\"#导入外置数据库脚本\" class=\"headerlink\" title=\"导入外置数据库脚本\"></a>导入外置数据库脚本</h5><p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222933197.png\" alt=\"image-20210914222933197\"></p>\n<h5 id=\"开启防火墙\"><a href=\"#开启防火墙\" class=\"headerlink\" title=\"开启防火墙\"></a>开启防火墙</h5><p>nacos开启端口8848</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">firewall-cmd --permanent --add-port=8848/tcp<br>systemctl restart firewalld<br>firewall-cmd --query-port=8848/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改配置外置数据源\"><a href=\"#修改配置外置数据源\" class=\"headerlink\" title=\"修改配置外置数据源\"></a>修改配置外置数据源</h5><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#*************** Config Module Related Configurations ***************#</span><br><span class=\"hljs-comment\">### If use MySQL as datasource:</span><br><span class=\"hljs-string\">spring.datasource.platform=mysql</span><br><br><span class=\"hljs-comment\">### Count of DB:</span><br><span class=\"hljs-string\">db.num=1</span><br><br><span class=\"hljs-comment\">### Connect URL of DB:</span><br><span class=\"hljs-string\">db.url.0=jdbc:mysql://192.168.50.60:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class=\"hljs-string\">db.user.0=root</span><br><span class=\"hljs-string\">db.password.0=password</span><br><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改集群配置\"><a href=\"#修改集群配置\" class=\"headerlink\" title=\"修改集群配置\"></a>修改集群配置</h5><h6 id=\"复制文件\"><a href=\"#复制文件\" class=\"headerlink\" title=\"复制文件\"></a>复制文件</h6><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">cp cluster.conf.example cluster.conf<br></code></pre></td></tr></table></figure>\n\n<p>修改内容如下</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">192.168.50.53:8848<br>192.168.50.54:8848<br>192.168.50.55:8848<br></code></pre></td></tr></table></figure>\n\n<p>将三台服务器都按照上面的步骤进行设置，然后启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">/usr/local/nacos/bin/startup.sh<br></code></pre></td></tr></table></figure>\n\n<p>分别访问 能否进入</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914222813648.png\" alt=\"image-20210914222813648\"></p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914224045767.png\" alt=\"image-20210914224045767\"></p>\n<h5 id=\"设置nginx进行反向代理\"><a href=\"#设置nginx进行反向代理\" class=\"headerlink\" title=\"设置nginx进行反向代理\"></a>设置nginx进行反向代理</h5><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sh\">vim nginx.conf<br></code></pre></td></tr></table></figure>\n\n<p>内容如下</p>\n<figure class=\"highlight asciidoc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs asciidoc\"><span class=\"hljs-code\">....</span><br><span class=\"hljs-code\">    #gzip  on;</span><br><span class=\"hljs-code\">    upstream nacosCluster&#123;</span><br><span class=\"hljs-code\">        server 192.168.50.53:8848;</span><br><span class=\"hljs-code\">        server 192.168.50.54:8848;</span><br><span class=\"hljs-code\">        server 192.168.50.55:8848;</span><br><span class=\"hljs-code\">    &#125;</span><br><span class=\"hljs-code\">    server &#123;</span><br><span class=\"hljs-code\">        listen 8848;</span><br><span class=\"hljs-code\">        server_name nacos;</span><br><span class=\"hljs-code\">        </span><br><span class=\"hljs-code\">        add_header backendIP $upstream_addr;</span><br><span class=\"hljs-code\">        add_header backendCode $upstream_status;</span><br><span class=\"hljs-code\"></span><br><span class=\"hljs-code\">        location /nacos/ &#123;</span><br><span class=\"hljs-code\">            proxy_pass http://nacosCluster/nacos/;</span><br><span class=\"hljs-code\">        &#125;</span><br><span class=\"hljs-code\">    &#125;</span><br><span class=\"hljs-code\"></span><br><span class=\"hljs-code\">....</span><br></code></pre></td></tr></table></figure>\n\n<p>add_header backendIP $upstream_addr;<br>add_header backendCode $upstream_status;</p>\n<p>可以看出反向代理到了什么地方，可加可不加。</p>\n<h5 id=\"开启nginx端口\"><a href=\"#开启nginx端口\" class=\"headerlink\" title=\"开启nginx端口\"></a>开启nginx端口</h5><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">firewall-cmd --permanent <span class=\"hljs-attribute\">--add-port</span>=8848/tcp<br>systemctl restart firewalld<br>firewall-cmd <span class=\"hljs-attribute\">--query-port</span>=8848/tcp<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h5><p>访问<a href=\"http://192.168.50.56:8848/nacos/index.html#/login\">http://192.168.50.56:8848/nacos/index.html#/login</a></p>\n<p>创建一个测试用户</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225141864.png\" alt=\"image-20210914225141864\"></p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225150647.png\" alt=\"image-20210914225150647\"></p>\n<h5 id=\"检查数据库\"><a href=\"#检查数据库\" class=\"headerlink\" title=\"检查数据库\"></a>检查数据库</h5><p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210914225203767.png\" alt=\"image-20210914225203767\"></p>\n"},{"title":"nat模式连接虚拟机","date":"2021-12-15T11:24:43.000Z","urlname":"nat模式连接虚拟机","_content":"\n> 梦在前方，路在脚下！\n\n# nat模式连接虚拟机\n\nvmare配置\n\n![image-20210326152638148](F:/%25E6%2596%2587%25E6%25A1%25A3/typoraImage/image-20210326152638148.png)\n\n![image-20210326152659985](F:\\文档\\typoraImage\\image-20210326152659985.png)\n\n把DHCP关掉\n\n![image-20210326153430679](F:\\文档\\typoraImage\\image-20210326153430679.png)\n\n进入nat设置\n\n![image-20210326153508673](F:\\文档\\typoraImage\\image-20210326153508673.png)\n\n##### 网卡配置\n\n进入\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n```\n\n需要将ip设置到同一个网段内\n\n```shell\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=no\nIPADDR=192.168.72.9\nGATEWAY=192.168.72.2\nDNS1=8.8.8.8\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=43fad4f7-a55f-482e-b90b-28acd5336fcb\nDEVICE=ens33\nONBOOT=yes\n\n```\n\n##### 修改wmare8配置\n\n设置到同一网段内\n\n![image-20210326153703255](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326153703255.png)\n\n##### 重启网卡\n\n```shell\nsystemctl restart network\n```\n\n![image-20210326154117444](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326154117444.png)","source":"_posts/nat模式连接虚拟机.md","raw":"---\ntitle: nat模式连接虚拟机\ncategories:\n  - 虚拟机\ntags:\n  - nat\ndate: 2021-12-15 19:24:43\nurlname: nat模式连接虚拟机\n---\n\n> 梦在前方，路在脚下！\n\n# nat模式连接虚拟机\n\nvmare配置\n\n![image-20210326152638148](F:/%25E6%2596%2587%25E6%25A1%25A3/typoraImage/image-20210326152638148.png)\n\n![image-20210326152659985](F:\\文档\\typoraImage\\image-20210326152659985.png)\n\n把DHCP关掉\n\n![image-20210326153430679](F:\\文档\\typoraImage\\image-20210326153430679.png)\n\n进入nat设置\n\n![image-20210326153508673](F:\\文档\\typoraImage\\image-20210326153508673.png)\n\n##### 网卡配置\n\n进入\n\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-ens33\n```\n\n需要将ip设置到同一个网段内\n\n```shell\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=no\nIPADDR=192.168.72.9\nGATEWAY=192.168.72.2\nDNS1=8.8.8.8\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=43fad4f7-a55f-482e-b90b-28acd5336fcb\nDEVICE=ens33\nONBOOT=yes\n\n```\n\n##### 修改wmare8配置\n\n设置到同一网段内\n\n![image-20210326153703255](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326153703255.png)\n\n##### 重启网卡\n\n```shell\nsystemctl restart network\n```\n\n![image-20210326154117444](https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326154117444.png)","slug":"nat模式连接虚拟机","published":1,"updated":"2021-12-15T11:25:06.000Z","_id":"ckx7g5aop000g0wpwdj5w5bg0","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"nat模式连接虚拟机\"><a href=\"#nat模式连接虚拟机\" class=\"headerlink\" title=\"nat模式连接虚拟机\"></a>nat模式连接虚拟机</h1><p>vmare配置</p>\n<p><img src=\"F:/%25E6%2596%2587%25E6%25A1%25A3/typoraImage/image-20210326152638148.png\" alt=\"image-20210326152638148\"></p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326152659985.png\" alt=\"image-20210326152659985\"></p>\n<p>把DHCP关掉</p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326153430679.png\" alt=\"image-20210326153430679\"></p>\n<p>进入nat设置</p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326153508673.png\" alt=\"image-20210326153508673\"></p>\n<h5 id=\"网卡配置\"><a href=\"#网卡配置\" class=\"headerlink\" title=\"网卡配置\"></a>网卡配置</h5><p>进入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">vi /etc/sysconfig/network-scripts/ifcfg-ens33<br></code></pre></td></tr></table></figure>\n\n<p>需要将ip设置到同一个网段内</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">TYPE=Ethernet<br>PROXY_METHOD=none<br>BROWSER_ONLY=no<br>BOOTPROTO=no<br>IPADDR=192.168.72.9<br>GATEWAY=192.168.72.2<br>DNS1=8.8.8.8<br>DEFROUTE=yes<br>IPV4_FAILURE_FATAL=no<br>IPV6INIT=yes<br>IPV6_AUTOCONF=yes<br>IPV6_DEFROUTE=yes<br>IPV6_FAILURE_FATAL=no<br>IPV6_ADDR_GEN_MODE=stable-privacy<br>NAME=ens33<br>UUID=43fad4f7-a55f-482e-b90b-28acd5336fcb<br>DEVICE=ens33<br>ONBOOT=yes<br><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改wmare8配置\"><a href=\"#修改wmare8配置\" class=\"headerlink\" title=\"修改wmare8配置\"></a>修改wmare8配置</h5><p>设置到同一网段内</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326153703255.png\" alt=\"image-20210326153703255\"></p>\n<h5 id=\"重启网卡\"><a href=\"#重启网卡\" class=\"headerlink\" title=\"重启网卡\"></a>重启网卡</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart network<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326154117444.png\" alt=\"image-20210326154117444\"></p>\n","site":{"data":{}},"wordcount":495,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h1 id=\"nat模式连接虚拟机\"><a href=\"#nat模式连接虚拟机\" class=\"headerlink\" title=\"nat模式连接虚拟机\"></a>nat模式连接虚拟机</h1><p>vmare配置</p>\n<p><img src=\"F:/%25E6%2596%2587%25E6%25A1%25A3/typoraImage/image-20210326152638148.png\" alt=\"image-20210326152638148\"></p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326152659985.png\" alt=\"image-20210326152659985\"></p>\n<p>把DHCP关掉</p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326153430679.png\" alt=\"image-20210326153430679\"></p>\n<p>进入nat设置</p>\n<p><img src=\"F:\\文档\\typoraImage\\image-20210326153508673.png\" alt=\"image-20210326153508673\"></p>\n<h5 id=\"网卡配置\"><a href=\"#网卡配置\" class=\"headerlink\" title=\"网卡配置\"></a>网卡配置</h5><p>进入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">vi /etc/sysconfig/network-scripts/ifcfg-ens33<br></code></pre></td></tr></table></figure>\n\n<p>需要将ip设置到同一个网段内</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">TYPE=Ethernet<br>PROXY_METHOD=none<br>BROWSER_ONLY=no<br>BOOTPROTO=no<br>IPADDR=192.168.72.9<br>GATEWAY=192.168.72.2<br>DNS1=8.8.8.8<br>DEFROUTE=yes<br>IPV4_FAILURE_FATAL=no<br>IPV6INIT=yes<br>IPV6_AUTOCONF=yes<br>IPV6_DEFROUTE=yes<br>IPV6_FAILURE_FATAL=no<br>IPV6_ADDR_GEN_MODE=stable-privacy<br>NAME=ens33<br>UUID=43fad4f7-a55f-482e-b90b-28acd5336fcb<br>DEVICE=ens33<br>ONBOOT=yes<br><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改wmare8配置\"><a href=\"#修改wmare8配置\" class=\"headerlink\" title=\"修改wmare8配置\"></a>修改wmare8配置</h5><p>设置到同一网段内</p>\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326153703255.png\" alt=\"image-20210326153703255\"></p>\n<h5 id=\"重启网卡\"><a href=\"#重启网卡\" class=\"headerlink\" title=\"重启网卡\"></a>重启网卡</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart network<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://boot-generate.oss-cn-chengdu.aliyuncs.com/img/image-20210326154117444.png\" alt=\"image-20210326154117444\"></p>\n"},{"title":"修改linux网卡","date":"2021-12-15T11:27:20.000Z","urlname":"修改Linux网卡","_content":"\n> 梦在前方，路在脚下！\n\n### 修改Linux网卡\n\n##### 进入指定文件夹\n\n```shell\ncd /etc/sysconfig/network-scripts\n```\n\n##### 修改文件内容\n\n```\nTYPE=\"Ethernet\"\nPROXY_METHOD=\"none\"\nBROWSER_ONLY=\"no\"\nBOOTPROTO=\"static\"\nDEFROUTE=\"yes\"\nIPV4_FAILURE_FATAL=\"no\"\nIPV6INIT=\"yes\"\nIPV6_AUTOCONF=\"yes\"\nIPV6_DEFROUTE=\"yes\"\nIPV6_FAILURE_FATAL=\"no\"\nIPV6_ADDR_GEN_MODE=\"stable-privacy\"\nNAME=\"ens33\"\nUUID=\"58c56b31-b278-420d-9c85-d389fb29b6e0\"\nDEVICE=\"ens33\"\nONBOOT=\"yes\"\nIPADDR=\"192.168.72.14\"\nGATEWAY=\"192.168.72.2\"\nNETMASK=\"255.255.255.0\"\n```\n\n##### 重启网卡服务\n\n```shell\nsystemctl restart network\n```\n\n","source":"_posts/修改linux网卡.md","raw":"---\ntitle: 修改linux网卡\ncategories:\n  - linux\ntags:\n  - 网卡\n  - linux\ndate: 2021-12-15 19:27:20\nurlname: 修改Linux网卡\n---\n\n> 梦在前方，路在脚下！\n\n### 修改Linux网卡\n\n##### 进入指定文件夹\n\n```shell\ncd /etc/sysconfig/network-scripts\n```\n\n##### 修改文件内容\n\n```\nTYPE=\"Ethernet\"\nPROXY_METHOD=\"none\"\nBROWSER_ONLY=\"no\"\nBOOTPROTO=\"static\"\nDEFROUTE=\"yes\"\nIPV4_FAILURE_FATAL=\"no\"\nIPV6INIT=\"yes\"\nIPV6_AUTOCONF=\"yes\"\nIPV6_DEFROUTE=\"yes\"\nIPV6_FAILURE_FATAL=\"no\"\nIPV6_ADDR_GEN_MODE=\"stable-privacy\"\nNAME=\"ens33\"\nUUID=\"58c56b31-b278-420d-9c85-d389fb29b6e0\"\nDEVICE=\"ens33\"\nONBOOT=\"yes\"\nIPADDR=\"192.168.72.14\"\nGATEWAY=\"192.168.72.2\"\nNETMASK=\"255.255.255.0\"\n```\n\n##### 重启网卡服务\n\n```shell\nsystemctl restart network\n```\n\n","slug":"修改linux网卡","published":1,"updated":"2021-12-15T11:27:42.000Z","_id":"ckx7g8o9k0000dwpwerb65dun","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h3 id=\"修改Linux网卡\"><a href=\"#修改Linux网卡\" class=\"headerlink\" title=\"修改Linux网卡\"></a>修改Linux网卡</h3><h5 id=\"进入指定文件夹\"><a href=\"#进入指定文件夹\" class=\"headerlink\" title=\"进入指定文件夹\"></a>进入指定文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd /etc/sysconfig/network-scripts<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改文件内容\"><a href=\"#修改文件内容\" class=\"headerlink\" title=\"修改文件内容\"></a>修改文件内容</h5><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">TYPE</span>=<span class=\"hljs-string\">&quot;Ethernet&quot;</span><br><span class=\"hljs-attr\">PROXY_METHOD</span>=<span class=\"hljs-string\">&quot;none&quot;</span><br><span class=\"hljs-attr\">BROWSER_ONLY</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">BOOTPROTO</span>=<span class=\"hljs-string\">&quot;static&quot;</span><br><span class=\"hljs-attr\">DEFROUTE</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV4_FAILURE_FATAL</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">IPV6INIT</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_AUTOCONF</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_DEFROUTE</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_FAILURE_FATAL</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">IPV6_ADDR_GEN_MODE</span>=<span class=\"hljs-string\">&quot;stable-privacy&quot;</span><br><span class=\"hljs-attr\">NAME</span>=<span class=\"hljs-string\">&quot;ens33&quot;</span><br><span class=\"hljs-attr\">UUID</span>=<span class=\"hljs-string\">&quot;58c56b31-b278-420d-9c85-d389fb29b6e0&quot;</span><br><span class=\"hljs-attr\">DEVICE</span>=<span class=\"hljs-string\">&quot;ens33&quot;</span><br><span class=\"hljs-attr\">ONBOOT</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPADDR</span>=<span class=\"hljs-string\">&quot;192.168.72.14&quot;</span><br><span class=\"hljs-attr\">GATEWAY</span>=<span class=\"hljs-string\">&quot;192.168.72.2&quot;</span><br><span class=\"hljs-attr\">NETMASK</span>=<span class=\"hljs-string\">&quot;255.255.255.0&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"重启网卡服务\"><a href=\"#重启网卡服务\" class=\"headerlink\" title=\"重启网卡服务\"></a>重启网卡服务</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart network<br></code></pre></td></tr></table></figure>\n\n","site":{"data":{}},"wordcount":666,"excerpt":"","more":"<blockquote>\n<p>梦在前方，路在脚下！</p>\n</blockquote>\n<h3 id=\"修改Linux网卡\"><a href=\"#修改Linux网卡\" class=\"headerlink\" title=\"修改Linux网卡\"></a>修改Linux网卡</h3><h5 id=\"进入指定文件夹\"><a href=\"#进入指定文件夹\" class=\"headerlink\" title=\"进入指定文件夹\"></a>进入指定文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd /etc/sysconfig/network-scripts<br></code></pre></td></tr></table></figure>\n\n<h5 id=\"修改文件内容\"><a href=\"#修改文件内容\" class=\"headerlink\" title=\"修改文件内容\"></a>修改文件内容</h5><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-attr\">TYPE</span>=<span class=\"hljs-string\">&quot;Ethernet&quot;</span><br><span class=\"hljs-attr\">PROXY_METHOD</span>=<span class=\"hljs-string\">&quot;none&quot;</span><br><span class=\"hljs-attr\">BROWSER_ONLY</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">BOOTPROTO</span>=<span class=\"hljs-string\">&quot;static&quot;</span><br><span class=\"hljs-attr\">DEFROUTE</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV4_FAILURE_FATAL</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">IPV6INIT</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_AUTOCONF</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_DEFROUTE</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPV6_FAILURE_FATAL</span>=<span class=\"hljs-string\">&quot;no&quot;</span><br><span class=\"hljs-attr\">IPV6_ADDR_GEN_MODE</span>=<span class=\"hljs-string\">&quot;stable-privacy&quot;</span><br><span class=\"hljs-attr\">NAME</span>=<span class=\"hljs-string\">&quot;ens33&quot;</span><br><span class=\"hljs-attr\">UUID</span>=<span class=\"hljs-string\">&quot;58c56b31-b278-420d-9c85-d389fb29b6e0&quot;</span><br><span class=\"hljs-attr\">DEVICE</span>=<span class=\"hljs-string\">&quot;ens33&quot;</span><br><span class=\"hljs-attr\">ONBOOT</span>=<span class=\"hljs-string\">&quot;yes&quot;</span><br><span class=\"hljs-attr\">IPADDR</span>=<span class=\"hljs-string\">&quot;192.168.72.14&quot;</span><br><span class=\"hljs-attr\">GATEWAY</span>=<span class=\"hljs-string\">&quot;192.168.72.2&quot;</span><br><span class=\"hljs-attr\">NETMASK</span>=<span class=\"hljs-string\">&quot;255.255.255.0&quot;</span><br></code></pre></td></tr></table></figure>\n\n<h5 id=\"重启网卡服务\"><a href=\"#重启网卡服务\" class=\"headerlink\" title=\"重启网卡服务\"></a>重启网卡服务</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">systemctl restart network<br></code></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckx7bp90l0007ospw7bgjcjfv","category_id":"ckx7bp90n0009ospw9zp2e4yq","_id":"ckx7bp90p000dospwegphg3au"},{"post_id":"ckx7btti2000lospwbqsgddck","category_id":"ckx7bt0rk000hospw8c3u96a0","_id":"ckx7btti4000nospw6omh6jkg"},{"post_id":"ckx7crzjr000oospwd2ls0nrc","category_id":"ckx7cx86x000rospwa2ixbhuj","_id":"ckx7cx86y000uospwbv5s2xnr"},{"post_id":"ckx7fdt9d000vospw25uvcv4r","category_id":"ckx7fee61000yospwffbhf4am","_id":"ckx7fee620011ospw1t7ab5z0"},{"post_id":"ckx7fhji70015ospwd1ei85c2","category_id":"ckx7fee61000yospwffbhf4am","_id":"ckx7fsva000017kpwfzu94te8"},{"post_id":"ckx7ffvud0012ospwdzpn3u8u","category_id":"ckx7fee61000yospwffbhf4am","_id":"ckx7ft3s000037kpwfrejc0xa"},{"post_id":"ckx7g1s2y00000wpw3wjqaoca","category_id":"ckx7bp90n0009ospw9zp2e4yq","_id":"ckx7g1s3100020wpw4kbj138z"},{"post_id":"ckx7g3tdx00050wpwfdc82iku","category_id":"ckx7g4mw400080wpwarm82iwq","_id":"ckx7g4mw6000e0wpw5y04dcyk"},{"post_id":"ckx7g3tdx00050wpwfdc82iku","category_id":"ckx7g4mw5000b0wpwbu2vads2","_id":"ckx7g4mw6000f0wpwgk9y06qp"},{"post_id":"ckx7g5aop000g0wpwdj5w5bg0","category_id":"ckx7g5mez000j0wpwc0oudofh","_id":"ckx7g5mf0000m0wpwfebc87cv"},{"post_id":"ckx7g8o9k0000dwpwerb65dun","category_id":"ckx7bp90n0009ospw9zp2e4yq","_id":"ckx7g8o9p0002dwpwgd66epuj"}],"PostTag":[{"post_id":"ckx7bp90l0007ospw7bgjcjfv","tag_id":"ckx7bp90m0008ospwf3zsh38b","_id":"ckx7bp90p000cospw8l0g4eca"},{"post_id":"ckx7btti2000lospwbqsgddck","tag_id":"ckx7bt0rk000iospw5cd3gmwm","_id":"ckx7btti4000mospw14qm9h5h"},{"post_id":"ckx7crzjr000oospwd2ls0nrc","tag_id":"ckx7cx86y000sospw05ry4vsm","_id":"ckx7cx86y000tospwg8tr9c4b"},{"post_id":"ckx7fdt9d000vospw25uvcv4r","tag_id":"ckx7fee61000zospw16i7eg58","_id":"ckx7fee610010ospw38xp668l"},{"post_id":"ckx7fhji70015ospwd1ei85c2","tag_id":"ckx7fee61000zospw16i7eg58","_id":"ckx7fsva000007kpw1p05c02h"},{"post_id":"ckx7ffvud0012ospwdzpn3u8u","tag_id":"ckx7fee61000zospw16i7eg58","_id":"ckx7ft3rz00027kpwfswyckh4"},{"post_id":"ckx7g1s2y00000wpw3wjqaoca","tag_id":"ckx7g2owq00030wpw12qsg3dl","_id":"ckx7g2owq00040wpwfc76hjcu"},{"post_id":"ckx7g3tdx00050wpwfdc82iku","tag_id":"ckx7g4mw500090wpw17w59gq5","_id":"ckx7g4mw6000c0wpw1u4dcgdh"},{"post_id":"ckx7g3tdx00050wpwfdc82iku","tag_id":"ckx7g4mw5000a0wpw5dfr9tu3","_id":"ckx7g4mw6000d0wpw1zinbt2l"},{"post_id":"ckx7g5aop000g0wpwdj5w5bg0","tag_id":"ckx7g5mez000k0wpwanjg7uji","_id":"ckx7g5mf0000l0wpw5jobf0jy"},{"post_id":"ckx7g8o9k0000dwpwerb65dun","tag_id":"ckx7bp90m0008ospwf3zsh38b","_id":"ckx7g8o9p0001dwpw4ayffrgx"},{"post_id":"ckx7g8o9k0000dwpwerb65dun","tag_id":"ckx7g8wtx0003dwpw6e7x2sh7","_id":"ckx7g8wty0004dwpwfcg7dsqm"}],"Tag":[{"name":"linux","_id":"ckx7bp90m0008ospwf3zsh38b"},{"name":"U盘","_id":"ckx7bt0rk000iospw5cd3gmwm"},{"name":"博客","_id":"ckx7cx86y000sospw05ry4vsm"},{"name":"sql","_id":"ckx7fee61000zospw16i7eg58"},{"name":"防火墙","_id":"ckx7g2owq00030wpw12qsg3dl"},{"name":"微服务","_id":"ckx7g4mw500090wpw17w59gq5"},{"name":"nacos","_id":"ckx7g4mw5000a0wpw5dfr9tu3"},{"name":"nat","_id":"ckx7g5mez000k0wpwanjg7uji"},{"name":"网卡","_id":"ckx7g8wtx0003dwpw6e7x2sh7"}]}}